Traceback (most recent call last):
  File "C:\Users\Mark\miniconda3\envs\jupyterbook\lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Mark\miniconda3\envs\jupyterbook\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Mark\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Mark\miniconda3\envs\jupyterbook\lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\Mark\miniconda3\envs\jupyterbook\lib\asyncio\base_events.py", line 649, in run_until_complete
    return future.result()
  File "C:\Users\Mark\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Mark\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Mark\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import plotly.graph_objects as go
from plotly.subplots import make_subplots

bruto_df = pd.read_csv('gemmideld_bruto_inkomen.csv', delimiter=',')
besteedbaar_df = pd.read_csv('gemmideld_inkomen.csv', delimiter=',')
huisprijs_df = pd.read_csv('huisprijs.csv', delimiter=',')

bruto_df.columns = bruto_df.columns.str.strip()
besteedbaar_df.columns = besteedbaar_df.columns.str.strip()
huisprijs_df.columns = huisprijs_df.columns.str.strip()

def clean_income_data(df, year_col, value_col):
    df = df[[year_col, value_col]].copy()
    df[year_col] = df[year_col].astype(str).str.extract(r'(\d{4})').astype(float)
    df[value_col] = df[value_col].astype(str).str.replace(',', '.').astype(float)
    return df[(df[year_col] >= 2011) & (df[year_col] <= 2023)].reset_index(drop=True)

bruto_clean = clean_income_data(bruto_df, 'Category', 'Gemiddeld bruto inkomen')
besteedbaar_clean = clean_income_data(besteedbaar_df, 'Category', 'Gestandaardiseerd besteedbaar inkomen')
bruto_clean.columns = ['Year', 'Gross Income']
besteedbaar_clean.columns = ['Year', 'Disposable Income']

huisprijs_df = huisprijs_df[huisprijs_df['Perioden'].astype(str).str.match(r'^\d{4}$')]
huisprijs_df['Perioden'] = huisprijs_df['Perioden'].astype(int)
huisprijs_df['Gemiddelde verkoopprijs (euro)'] = huisprijs_df['Gemiddelde verkoopprijs (euro)']\
    .astype(str).str.replace('.', '', regex=False).str.replace(',', '.', regex=False).astype(float)
huisprijs_clean = huisprijs_df[(huisprijs_df['Perioden'] >= 2011) & (huisprijs_df['Perioden'] <= 2023)][
    ['Perioden', 'Gemiddelde verkoopprijs (euro)']].reset_index(drop=True)
huisprijs_clean.columns = ['Year', 'House Price']

merged_df = pd.merge(huisprijs_clean, bruto_clean, on='Year', how='inner')
merged_df = pd.merge(merged_df, besteedbaar_clean, on='Year', how='inner')

fig = make_subplots(specs=[[{"secondary_y": True}]])
fig.add_trace(go.Scatter(
    x=merged_df['Year'],
    y=merged_df['House Price'],
    mode='lines+markers',
    name='House Price (â‚¬)',
    line=dict(width=3)
), secondary_y=False)
fig.add_trace(go.Scatter(
    x=merged_df['Year'],
    y=merged_df['Disposable Income'],
    mode='lines+markers',
    name='Disposable Income (â‚¬)',
    line=dict(dash='dot', width=3)
), secondary_y=True)

fig.update_layout(
    title="Comparison of House Prices and Income (2011â€“2023)",
    xaxis_title="Year",
    legend=dict(x=0.02, y=0.98),
    template="plotly_white",
    height=600
)
fig.update_yaxes(title_text="House Price (â‚¬)", secondary_y=False)
fig.update_yaxes(title_text="Standardized Income (â‚¬)", secondary_y=True)

fig.show()

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[1], line 1[0m
[1;32m----> 1[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mpandas[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mpd[39;00m
[0;32m      2[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mgraph_objects[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mgo[39;00m
[0;32m      3[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01msubplots[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m make_subplots

[1;31mModuleNotFoundError[0m: No module named 'pandas'

